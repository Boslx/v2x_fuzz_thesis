from scapy.layers.dot11 import PrismHeader, Dot11, Dot11QoS
from scapy.layers.l2 import LLC

from scapy_etsi_its.Etsi_Its_Msgs import *

if __name__ == "__main__":
    gn_buffer = [
        0x12, 0x6f, 0x05, 0x01, 0x03, 0x81, 0x00, 0x40, 0x03, 0x80, 0x67, 0x20, 0x40, 0x03, 0x00, 0x00, 0x33, 0x01, 0x00,
        0x00, 0x59, 0x00, 0x00, 0x3d, 0x06, 0xe8, 0xb3, 0xdb, 0xba, 0xe6, 0xfa, 0x7f, 0x5c, 0xc3, 0x9b, 0x1d, 0x1a, 0x20,
        0x43, 0x05, 0x6b, 0xf9, 0x0e, 0x80, 0x00, 0x00, 0x00, 0x1d, 0x1a, 0x20, 0x43, 0x05, 0x6b, 0xf9, 0x0e, 0x01, 0x90,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xd4, 0x00, 0x00, 0x02, 0x04, 0xdb, 0xba, 0xe6, 0xfa, 0x00, 0x18, 0x10,
        0x0b, 0x81, 0x00, 0x00, 0x3d, 0xf8, 0x73, 0xb7, 0x30, 0x40, 0x01, 0x04, 0x30, 0x24, 0xaa, 0x00, 0x10, 0x21, 0x81,
        0x25, 0x50, 0x00, 0xc1, 0x1c, 0x09, 0x2a, 0x80, 0x08, 0x08, 0x60, 0x49, 0xc2, 0x00, 0x50, 0x43, 0x02, 0x4a, 0xf0,
        0x40, 0x01, 0x89, 0x00, 0x02, 0x4b, 0xe1, 0x82, 0x5c, 0x15, 0x78, 0x81, 0x01, 0x01, 0x80, 0x03, 0x00, 0x80, 0x2a,
        0x5f, 0x51, 0xd6, 0x6c, 0x85, 0x5a, 0x64, 0x10, 0x83, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0xd8, 0x9f, 0x85, 0x86,
        0x00, 0x05, 0x01, 0x0b, 0x80, 0x01, 0x24, 0x81, 0x04, 0x03, 0x01, 0x80, 0x00, 0x80, 0x01, 0x25, 0x81, 0x05, 0x04,
        0x01, 0xff, 0xff, 0xff, 0x80, 0x01, 0x89, 0x81, 0x03, 0x02, 0x01, 0xe0, 0x80, 0x01, 0x8a, 0x81, 0x03, 0x02, 0x01,
        0xc0, 0x80, 0x01, 0x8b, 0x81, 0x07, 0x06, 0x01, 0x00, 0x00, 0x00, 0xff, 0xf8, 0x00, 0x01, 0x8d, 0x80, 0x02, 0x02,
        0x7d, 0x81, 0x02, 0x01, 0x01, 0x80, 0x02, 0x02, 0x7e, 0x81, 0x02, 0x01, 0x01, 0x80, 0x02, 0x02, 0x7f, 0x81, 0x02,
        0x01, 0x01, 0x80, 0x03, 0x08, 0x40, 0x81, 0x81, 0x02, 0x01, 0x01, 0x80, 0x03, 0x08, 0x40, 0x82, 0x81, 0x02, 0x01,
        0x01, 0x80, 0x81, 0x82, 0x83, 0xec, 0x1d, 0x56, 0xb2, 0x72, 0x33, 0x91, 0x3e, 0x59, 0x36, 0xd5, 0x10, 0xef, 0x95,
        0x1e, 0xd8, 0x3a, 0x98, 0x7c, 0x33, 0x7b, 0xff, 0x9c, 0xa8, 0x67, 0x04, 0xb2, 0x43, 0x8f, 0x2a, 0x57, 0x81, 0x80,
        0x80, 0x9f, 0xc4, 0x75, 0x81, 0x4c, 0x55, 0x53, 0xe6, 0xfa, 0xd1, 0xa0, 0x46, 0x44, 0x6e, 0x6a, 0x21, 0x94, 0x75,
        0x61, 0xf7, 0x62, 0x83, 0x7c, 0x9f, 0x90, 0xc8, 0xea, 0xde, 0x21, 0x7f, 0xd7, 0x40, 0x3b, 0x02, 0xc2, 0x6a, 0x53,
        0xae, 0x5c, 0x88, 0x42, 0x01, 0x05, 0x6a, 0x8a, 0xb8, 0x6e, 0x9b, 0xe0, 0x2d, 0x62, 0x2b, 0x7b, 0x01, 0xf7, 0xe8,
        0x71, 0x68, 0xd1, 0x32, 0x9f, 0x28, 0x7a, 0x81, 0x80, 0x0c, 0x03, 0xd7, 0xc7, 0xe4, 0xe6, 0x9b, 0xff, 0x42, 0xe5,
        0xb7, 0xf0, 0xa9, 0x74, 0xbc, 0xc2, 0xc0, 0x49, 0x68, 0x51, 0x6a, 0xb4, 0x0d, 0x0e, 0x94, 0x52, 0x80, 0xe3, 0xe2,
        0x36, 0xc6, 0x35, 0x85, 0x5e, 0x8f, 0x57, 0x99, 0xc1, 0xbc, 0x0d, 0x45, 0xce, 0x5c, 0x34, 0xab, 0x02, 0x21, 0x72,
        0xe6, 0x68, 0xfb, 0x4a, 0x13, 0xfd, 0x30, 0x34, 0xbc, 0x7f, 0xd6, 0x24, 0x77, 0x5f, 0x9f, 0x21
    ]

    packet = GeoBasicHeader(bytes(gn_buffer))
    print(packet.show(dump=True))
    geoSecure = packet[GeoSecuredPacket].asn1

    original = geoSecure.to_coer()
    print(original.hex(' '))
    geoSecure._SAFE_BND = False

    recherche = geoSecure.get_val()
    geoSecure.set_val_at(["protocolVersion"], 255)

    new = geoSecure.to_coer()
    print(new.hex(' '))

    print(packet.show(dump=True))
